{"ast":null,"code":"import store from \"../stores/store.js\";\nvar loginResourceURL = \"http://localhost:8083/nmsLogsManager/v1/user/login\";\nvar usersResourceURL = \"http://localhost:8083/nmsLogsManager/v1/user/admin\";\nvar syslogResourceURL = \"http://localhost:8083/nmsLogsManager/v1/syslog\";\nvar countResourceURL = \"http://localhost:8083/nmsLogsManager/v1/syslog/count\";\nvar token = \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxIiwiaXNzIjoiTm1zU3lzbG9nIiwiZGV2aWNlTGlzdCI6WyIxMC4xMi4xMi4xMSIsIjIwLjEyLjEyLjIyIiwiMTAuMS4xMS4xMTAiLCIxMC4yMC4yMC4yMCIsIjEwLjEyLjEyLjIzMCIsIjEwLjEyLjQ0LjExIiwiMTkyLjEyLjEyLjExIl0sImV4cCI6MTU1MjE0MDQ0OSwiaWF0IjoxNTUyMTM5NjA5LCJqdGkiOiI2NTM5OTAwNjUifQ.ybd4tDlQCrqyYmg-HvLdUg-PfCLuxkipAmqNQa5KUXE\";\nexport function onLogin(username, password) {\n  console.log(\"Called from login page\");\n  var credentials = username + \":\" + password;\n  var encodedData = \"Basic \" + btoa(credentials);\n  console.log(\"UserHandler: credentials \" + credentials);\n  return fetch(loginResourceURL, {\n    method: \"POST\",\n    mode: \"cors\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: encodedData\n    }\n  }).then(function (response) {\n    console.log(\"UserHandler: status\" + response.status);\n    console.log(\"UserHandler: devices\" + response.headers.get(\"Devices\"));\n\n    if (response.status === 204 || response.status === 200) {\n      store.dispatch({\n        type: \"user_logged_in\",\n        userId: username,\n        authToken: response.headers.get(\"x-auth-access-token\"),\n        devices: response.headers.get(\"Devices\")\n      });\n    }\n  }).catch(function (error) {\n    console.error(\"UserHandler: Looks like an error\" + error);\n    alert(error);\n  });\n}\nexport function fetchUsers() {\n  console.log(\"UserHandler: Calling fetchUsers with user \", store.getState().user.userId);\n  console.log(\"UserHandler: Calling fetchUsers with \", store.getState().user);\n  var get_params = {\n    method: \"GET\",\n    mode: \"cors\",\n    headers: {\n      \"x-auth-access-token\": store.getState().user.authToken\n    }\n  };\n  return fetch(usersResourceURL, get_params).then(function (response) {\n    if (response.ok) {\n      response.json().then(function (json) {\n        console.log(\"UserHandler: fetch users response body \", json);\n        store.dispatch({\n          type: \"fetch_users\",\n          userList: json\n        });\n      });\n    }\n  }).catch(function (error) {\n    console.error(\"UserHandler: Looks like an error\" + error);\n    alert(error);\n  });\n}\nexport function fetchLogsForGrid() {\n  var get_params = {\n    method: \"GET\",\n    mode: \"cors\",\n    headers: {\n      \"x-auth-access-token\": token\n    }\n  };\n  return fetch(syslogResourceURL, get_params).then(function (response) {\n    return response.json();\n  }).then(function (response) {\n    //alert(response[0].ipaddress);\n    store.dispatch({\n      type: \"grid\",\n      logs: response\n    });\n  });\n}\nexport function fetchUser() {\n  var get_params = {\n    method: \"GET\",\n    mode: \"cors\",\n    headers: {\n      \"x-auth-access-token\": token\n    }\n  };\n  return fetch(usersResourceURL, get_params).then(function (response) {\n    if (response.ok) {\n      response.json().then(function (json) {\n        console.log(\"UserHandler: fetch users response body \", json);\n        store.dispatch({\n          type: \"fetch_users\",\n          user: json\n        });\n      });\n    }\n  }).catch(function (error) {\n    console.error(\"UserHandler: Looks like an error\" + error);\n    alert(error);\n  });\n}\nexport function updateInterval() {\n  return fetch(\"http://localhost:8083/nmsLogsManager/v1/user/\").then(function (response) {\n    console.log(response);\n    return response.json();\n  }).then(function (intervalData) {\n    store.dispatch({\n      type: \"interval\",\n      interval: intervalData.refreshInterval\n    });\n    console.log(\"Interval in ajax\", intervalData);\n  });\n}\nexport function fetchCount() {\n  var get_params = {\n    method: \"GET\",\n    mode: \"cors\",\n    headers: {\n      \"x-auth-access-token\": token\n    }\n  };\n  return fetch(countResourceURL, get_params).then(function (response) {\n    return response.json();\n  }).then(function (countData) {\n    console.log(countData);\n    var formattedData = [];\n    formattedData.push({\n      key: \"error\",\n      value: countData.errorCount\n    });\n    formattedData.push({\n      key: \"warning\",\n      value: countData.warnCount\n    });\n    formattedData.push({\n      key: \"info\",\n      value: countData.infoCount\n    });\n    formattedData.push({\n      key: \"debug\",\n      value: countData.debugCount\n    });\n    store.dispatch({\n      type: \"dashboard\",\n      count: formattedData\n    });\n    console.log(\"count in ajax\", formattedData);\n  });\n}","map":{"version":3,"sources":["/Users/sudhatri/Desktop/gitProjects/CMAD-nms-monitoring/src/rest/ajax.js"],"names":["store","loginResourceURL","usersResourceURL","syslogResourceURL","countResourceURL","token","onLogin","username","password","console","log","credentials","encodedData","btoa","fetch","method","mode","headers","Authorization","then","response","status","get","dispatch","type","userId","authToken","devices","catch","error","alert","fetchUsers","getState","user","get_params","ok","json","userList","fetchLogsForGrid","logs","fetchUser","updateInterval","intervalData","interval","refreshInterval","fetchCount","countData","formattedData","push","key","value","errorCount","warnCount","infoCount","debugCount","count"],"mappings":"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","sourcesContent":["import store from \"../stores/store.js\";\n\nconst loginResourceURL = \"http://localhost:8083/nmsLogsManager/v1/user/login\";\nconst usersResourceURL = \"http://localhost:8083/nmsLogsManager/v1/user/admin\";\nconst syslogResourceURL = \"http://localhost:8083/nmsLogsManager/v1/syslog\";\nconst countResourceURL = \"http://localhost:8083/nmsLogsManager/v1/syslog/count\";\nconst token =\n  \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxIiwiaXNzIjoiTm1zU3lzbG9nIiwiZGV2aWNlTGlzdCI6WyIxMC4xMi4xMi4xMSIsIjIwLjEyLjEyLjIyIiwiMTAuMS4xMS4xMTAiLCIxMC4yMC4yMC4yMCIsIjEwLjEyLjEyLjIzMCIsIjEwLjEyLjQ0LjExIiwiMTkyLjEyLjEyLjExIl0sImV4cCI6MTU1MjE0MDQ0OSwiaWF0IjoxNTUyMTM5NjA5LCJqdGkiOiI2NTM5OTAwNjUifQ.ybd4tDlQCrqyYmg-HvLdUg-PfCLuxkipAmqNQa5KUXE\";\nexport function onLogin(username, password) {\n  console.log(\"Called from login page\");\n  var credentials = username + \":\" + password;\n  var encodedData = \"Basic \" + btoa(credentials);\n  console.log(\"UserHandler: credentials \" + credentials);\n  return fetch(loginResourceURL, {\n    method: \"POST\",\n    mode: \"cors\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: encodedData\n    }\n  })\n    .then(response => {\n      console.log(\"UserHandler: status\" + response.status);\n      console.log(\"UserHandler: devices\" + response.headers.get(\"Devices\"));\n      if (response.status === 204 || response.status === 200) {\n        store.dispatch({\n          type: \"user_logged_in\",\n          userId: username,\n          authToken: response.headers.get(\"x-auth-access-token\"),\n          devices: response.headers.get(\"Devices\")\n        });\n      }\n    })\n    .catch(function(error) {\n      console.error(\"UserHandler: Looks like an error\" + error);\n      alert(error);\n    });\n}\n\nexport function fetchUsers() {\n  console.log(\n    \"UserHandler: Calling fetchUsers with user \",\n    store.getState().user.userId\n  );\n  console.log(\"UserHandler: Calling fetchUsers with \", store.getState().user);\n  var get_params = {\n    method: \"GET\",\n    mode: \"cors\",\n    headers: {\n      \"x-auth-access-token\": store.getState().user.authToken\n    }\n  };\n  return fetch(usersResourceURL, get_params)\n    .then(response => {\n      if (response.ok) {\n        response.json().then(json => {\n          console.log(\"UserHandler: fetch users response body \", json);\n          store.dispatch({ type: \"fetch_users\", userList: json });\n        });\n      }\n    })\n    .catch(function(error) {\n      console.error(\"UserHandler: Looks like an error\" + error);\n      alert(error);\n    });\n}\n\nexport function fetchLogsForGrid() {\n  var get_params = {\n    method: \"GET\",\n    mode: \"cors\",\n    headers: {\n      \"x-auth-access-token\": token\n    }\n  };\n  return fetch(syslogResourceURL, get_params)\n    .then(function(response) {\n      return response.json();\n    })\n    .then(function(response) {\n      //alert(response[0].ipaddress);\n\n      store.dispatch({\n        type: \"grid\",\n        logs: response\n      });\n    });\n}\n\nexport function fetchUser() {\n  var get_params = {\n    method: \"GET\",\n    mode: \"cors\",\n    headers: {\n      \"x-auth-access-token\": token\n    }\n  };\n  return fetch(usersResourceURL, get_params)\n    .then(response => {\n      if (response.ok) {\n        response.json().then(json => {\n          console.log(\"UserHandler: fetch users response body \", json);\n          store.dispatch({ type: \"fetch_users\", user: json });\n        });\n      }\n    })\n    .catch(function(error) {\n      console.error(\"UserHandler: Looks like an error\" + error);\n      alert(error);\n    });\n}\n\nexport function updateInterval() {\n  return fetch(\"http://localhost:8083/nmsLogsManager/v1/user/\")\n    .then(function(response) {\n      console.log(response);\n      return response.json();\n    })\n    .then(function(intervalData) {\n      store.dispatch({\n        type: \"interval\",\n        interval: intervalData.refreshInterval\n      });\n      console.log(\"Interval in ajax\", intervalData);\n    });\n}\n\nexport function fetchCount() {\n  var get_params = {\n    method: \"GET\",\n    mode: \"cors\",\n    headers: {\n      \"x-auth-access-token\": token\n    }\n  };\n  return fetch(countResourceURL, get_params)\n    .then(function(response) {\n      return response.json();\n    })\n    .then(function(countData) {\n      console.log(countData);\n      const formattedData = [];\n      formattedData.push({\n        key: \"error\",\n        value: countData.errorCount\n      });\n      formattedData.push({\n        key: \"warning\",\n        value: countData.warnCount\n      });\n      formattedData.push({\n        key: \"info\",\n        value: countData.infoCount\n      });\n      formattedData.push({\n        key: \"debug\",\n        value: countData.debugCount\n      });\n      store.dispatch({\n        type: \"dashboard\",\n        count: formattedData\n      });\n      console.log(\"count in ajax\", formattedData);\n    });\n}\n"]},"metadata":{},"sourceType":"module"}