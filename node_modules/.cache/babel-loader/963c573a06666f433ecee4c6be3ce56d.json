{"ast":null,"code":"import store from \"../stores/store.js\";\nvar loginResourceURL = \"http://localhost:8083/nmsLogsManager/v1/user/login\";\nvar usersResourceURL = \"http://localhost:8083/nmsLogsManager/v1/user/admin\";\nvar syslogResourceURL = \"http://localhost:8083/nmsLogsManager/v1/syslog\";\nvar countResourceURL = \"http://localhost:8083/nmsLogsManager/v1/syslog/count\";\nvar token = \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxIiwiaXNzIjoiTm1zU3lzbG9nIiwiZGV2aWNlTGlzdCI6WyIxMC4xMi4xMi4xMSIsIjIwLjEyLjEyLjIyIiwiMTAuMS4xMS4xMTAiLCIxMC4yMC4yMC4yMCIsIjEwLjEyLjEyLjIzMCIsIjEwLjEyLjQ0LjExIiwiMTkyLjEyLjEyLjExIl0sImV4cCI6MTU1MjE0MDQ0OSwiaWF0IjoxNTUyMTM5NjA5LCJqdGkiOiI2NTM5OTAwNjUifQ.ybd4tDlQCrqyYmg-HvLdUg-PfCLuxkipAmqNQa5KUXE\";\nexport function onLogin(username, password) {\n  var credentials = username + \":\" + password;\n  var encodedData = \"Basic \" + btoa(credentials);\n  return fetch(loginResourceURL, {\n    method: \"POST\",\n    mode: \"cors\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: encodedData\n    }\n  }).then(function (response) {\n    if (response.status === 204 || response.status === 200) {\n      console.log(\"User is authenticated with token\", response.headers.get(\"x-auth-access-token\"));\n      store.dispatch({\n        type: \"login\",\n        userName: username,\n        authToken: response.headers.get(\"x-auth-access-token\"),\n        devices: response.headers.get(\"Devices\")\n      });\n    }\n  }).catch(function (error) {\n    console.error(\"UserHandler: Looks like an error\" + error);\n    alert(error);\n  });\n}\nexport function fetchUsers() {\n  console.log(\"UserHandler: Calling fetchUsers with user \", store.getState().user.userId);\n  console.log(\"UserHandler: Calling fetchUsers with \", store.getState().user);\n  var get_params = {\n    method: \"GET\",\n    mode: \"cors\",\n    headers: {\n      \"x-auth-access-token\": store.getState().authToken\n    }\n  };\n  return fetch(usersResourceURL, get_params).then(function (response) {\n    if (response.ok) {\n      response.json().then(function (json) {\n        console.log(\"UserHandler: fetch users response body \", json);\n        store.dispatch({\n          type: \"fetch_users\",\n          userList: json\n        });\n      });\n    }\n  }).catch(function (error) {\n    console.error(\"UserHandler: Looks like an error\" + error);\n    alert(error);\n  });\n}\nexport function fetchLogsForGrid() {\n  console.log(\"My tokne\", store.getState().authToken);\n  var get_params = {\n    method: \"GET\",\n    mode: \"cors\",\n    headers: {\n      \"x-auth-access-token\": store.getState().authToken\n    }\n  };\n  return fetch(syslogResourceURL, get_params).then(function (response) {\n    return response.json();\n  }).then(function (response) {\n    //alert(response[0].ipaddress);\n    store.dispatch({\n      type: \"grid\",\n      logs: response\n    });\n  });\n}\nexport function fetchUser() {\n  console.log(\"My tokne\", store.getState().authToken);\n  var get_params = {\n    method: \"GET\",\n    mode: \"cors\",\n    headers: {\n      \"x-auth-access-token\": store.getState().authToken\n    }\n  };\n  return fetch(usersResourceURL, get_params).then(function (response) {\n    if (response.ok) {\n      response.json().then(function (json) {\n        console.log(\"UserHandler: fetch users response body \", json);\n        store.dispatch({\n          type: \"fetch_users\",\n          user: json\n        });\n      });\n    }\n  }).catch(function (error) {\n    console.error(\"UserHandler: Looks like an error\" + error);\n    alert(error);\n  });\n}\nexport function updateInterval() {\n  return fetch(\"http://localhost:8083/nmsLogsManager/v1/user/\").then(function (response) {\n    console.log(response);\n    return response.json();\n  }).then(function (intervalData) {\n    store.dispatch({\n      type: \"interval\",\n      interval: intervalData.refreshInterval\n    });\n    console.log(\"Interval in ajax\", intervalData);\n  });\n}\nexport function fetchCount() {\n  var get_params = {\n    method: \"GET\",\n    mode: \"cors\",\n    headers: {\n      \"x-auth-access-token\": store.getState().authToken\n    }\n  };\n  return fetch(countResourceURL, get_params).then(function (response) {\n    return response.json();\n  }).then(function (countData) {\n    console.log(countData);\n    var formattedData = [];\n    formattedData.push({\n      key: \"error\",\n      value: countData.errorCount\n    });\n    formattedData.push({\n      key: \"warning\",\n      value: countData.warnCount\n    });\n    formattedData.push({\n      key: \"info\",\n      value: countData.infoCount\n    });\n    formattedData.push({\n      key: \"debug\",\n      value: countData.debugCount\n    });\n    store.dispatch({\n      type: \"dashboard\",\n      count: formattedData\n    });\n    console.log(\"count in ajax\", formattedData);\n  });\n}","map":{"version":3,"sources":["/Users/sudhatri/Desktop/gitProjects/CMAD-nms-monitoring/src/rest/ajax.js"],"names":["store","loginResourceURL","usersResourceURL","syslogResourceURL","countResourceURL","token","onLogin","username","password","credentials","encodedData","btoa","fetch","method","mode","headers","Authorization","then","response","status","console","log","get","dispatch","type","userName","authToken","devices","catch","error","alert","fetchUsers","getState","user","userId","get_params","ok","json","userList","fetchLogsForGrid","logs","fetchUser","updateInterval","intervalData","interval","refreshInterval","fetchCount","countData","formattedData","push","key","value","errorCount","warnCount","infoCount","debugCount","count"],"mappings":"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","sourcesContent":["import store from \"../stores/store.js\";\n\nconst loginResourceURL = \"http://localhost:8083/nmsLogsManager/v1/user/login\";\nconst usersResourceURL = \"http://localhost:8083/nmsLogsManager/v1/user/admin\";\nconst syslogResourceURL = \"http://localhost:8083/nmsLogsManager/v1/syslog\";\nconst countResourceURL = \"http://localhost:8083/nmsLogsManager/v1/syslog/count\";\nconst token =\n  \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxIiwiaXNzIjoiTm1zU3lzbG9nIiwiZGV2aWNlTGlzdCI6WyIxMC4xMi4xMi4xMSIsIjIwLjEyLjEyLjIyIiwiMTAuMS4xMS4xMTAiLCIxMC4yMC4yMC4yMCIsIjEwLjEyLjEyLjIzMCIsIjEwLjEyLjQ0LjExIiwiMTkyLjEyLjEyLjExIl0sImV4cCI6MTU1MjE0MDQ0OSwiaWF0IjoxNTUyMTM5NjA5LCJqdGkiOiI2NTM5OTAwNjUifQ.ybd4tDlQCrqyYmg-HvLdUg-PfCLuxkipAmqNQa5KUXE\";\nexport function onLogin(username, password) {\n  var credentials = username + \":\" + password;\n  var encodedData = \"Basic \" + btoa(credentials);\n  return fetch(loginResourceURL, {\n    method: \"POST\",\n    mode: \"cors\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: encodedData\n    }\n  })\n    .then(response => {\n      if (response.status === 204 || response.status === 200) {\n        console.log(\n          \"User is authenticated with token\",\n          response.headers.get(\"x-auth-access-token\")\n        );\n        store.dispatch({\n          type: \"login\",\n          userName: username,\n          authToken: response.headers.get(\"x-auth-access-token\"),\n          devices: response.headers.get(\"Devices\")\n        });\n      }\n    })\n    .catch(function(error) {\n      console.error(\"UserHandler: Looks like an error\" + error);\n      alert(error);\n    });\n}\n\nexport function fetchUsers() {\n  console.log(\n    \"UserHandler: Calling fetchUsers with user \",\n    store.getState().user.userId\n  );\n  console.log(\"UserHandler: Calling fetchUsers with \", store.getState().user);\n  var get_params = {\n    method: \"GET\",\n    mode: \"cors\",\n    headers: {\n      \"x-auth-access-token\": store.getState().authToken\n    }\n  };\n  return fetch(usersResourceURL, get_params)\n    .then(response => {\n      if (response.ok) {\n        response.json().then(json => {\n          console.log(\"UserHandler: fetch users response body \", json);\n          store.dispatch({ type: \"fetch_users\", userList: json });\n        });\n      }\n    })\n    .catch(function(error) {\n      console.error(\"UserHandler: Looks like an error\" + error);\n      alert(error);\n    });\n}\n\nexport function fetchLogsForGrid() {\n  console.log(\"My tokne\", store.getState().authToken);\n  var get_params = {\n    method: \"GET\",\n    mode: \"cors\",\n    headers: {\n      \"x-auth-access-token\": store.getState().authToken\n    }\n  };\n  return fetch(syslogResourceURL, get_params)\n    .then(function(response) {\n      return response.json();\n    })\n    .then(function(response) {\n      //alert(response[0].ipaddress);\n\n      store.dispatch({\n        type: \"grid\",\n        logs: response\n      });\n    });\n}\n\nexport function fetchUser() {\n  console.log(\"My tokne\", store.getState().authToken);\n  var get_params = {\n    method: \"GET\",\n    mode: \"cors\",\n    headers: {\n      \"x-auth-access-token\": store.getState().authToken\n    }\n  };\n  return fetch(usersResourceURL, get_params)\n    .then(response => {\n      if (response.ok) {\n        response.json().then(json => {\n          console.log(\"UserHandler: fetch users response body \", json);\n          store.dispatch({ type: \"fetch_users\", user: json });\n        });\n      }\n    })\n    .catch(function(error) {\n      console.error(\"UserHandler: Looks like an error\" + error);\n      alert(error);\n    });\n}\n\nexport function updateInterval() {\n  return fetch(\"http://localhost:8083/nmsLogsManager/v1/user/\")\n    .then(function(response) {\n      console.log(response);\n      return response.json();\n    })\n    .then(function(intervalData) {\n      store.dispatch({\n        type: \"interval\",\n        interval: intervalData.refreshInterval\n      });\n      console.log(\"Interval in ajax\", intervalData);\n    });\n}\n\nexport function fetchCount() {\n  var get_params = {\n    method: \"GET\",\n    mode: \"cors\",\n    headers: {\n      \"x-auth-access-token\": store.getState().authToken\n    }\n  };\n  return fetch(countResourceURL, get_params)\n    .then(function(response) {\n      return response.json();\n    })\n    .then(function(countData) {\n      console.log(countData);\n      const formattedData = [];\n      formattedData.push({\n        key: \"error\",\n        value: countData.errorCount\n      });\n      formattedData.push({\n        key: \"warning\",\n        value: countData.warnCount\n      });\n      formattedData.push({\n        key: \"info\",\n        value: countData.infoCount\n      });\n      formattedData.push({\n        key: \"debug\",\n        value: countData.debugCount\n      });\n      store.dispatch({\n        type: \"dashboard\",\n        count: formattedData\n      });\n      console.log(\"count in ajax\", formattedData);\n    });\n}\n"]},"metadata":{},"sourceType":"module"}